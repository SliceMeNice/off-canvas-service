!function(exports){"use strict";function __extends(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}var AbstractOffCanvasService=function(){function AbstractOffCanvasService(){this.registeredViews={},this.transitionCallbacks=new Map,this.viewStack=new Array}return AbstractOffCanvasService.prototype.addTransitionCallback=function(from,to,callback){var id=from+"-"+to;this.transitionCallbacks.has(id)||this.transitionCallbacks.set(id,[]),this.transitionCallbacks.get(id).push(callback)},AbstractOffCanvasService.prototype.dismissCurrentView=function(){if(this.isShowingOffCanvasView()){var prevView=this.viewStack.pop(),nextView=this.viewStack[this.viewStack.length-1];return this.changeView(prevView,nextView)}},AbstractOffCanvasService.prototype.isShowingOffCanvasView=function(viewIdentifier){return this.viewStack.length?viewIdentifier?this.viewStack[this.viewStack.length-1].id==viewIdentifier:this.viewStack.length>1:!1},AbstractOffCanvasService.prototype.registerView=function(viewIdentifier,element){var view={id:viewIdentifier,element:element};return this.registeredViews[viewIdentifier]=view,this.fixateView(view),view},AbstractOffCanvasService.prototype.setBaseView=function(view){this.baseView=view,this.viewStack=[this.baseView],this.activateView(this.baseView)},AbstractOffCanvasService.prototype.showView=function(viewIdentifier){if(viewIdentifier!=this.baseView.id){var view=this.registeredViews[viewIdentifier];if(view&&-1==this.viewStack.indexOf(view)){this.viewStack.push(view);var prevView=this.viewStack[this.viewStack.length-2],nextView=this.viewStack[this.viewStack.length-1];this.changeView(prevView,nextView)}}},AbstractOffCanvasService}(),OffCanvasService=function(_super){function OffCanvasService(){_super.apply(this,arguments)}return __extends(OffCanvasService,_super),OffCanvasService.prototype.activateView=function(view){var style=view.element.style;style.display="block",style.height="",style.left="",style.minHeight=window.innerHeight+"px",style.minWidth=Math.min(window.innerWidth,document.body.offsetWidth)+"px",style.overflow="",style.position="",style.top="",style.width=""},OffCanvasService.prototype.changeView=function(prevView,nextView){function collectTransitionCallbacks(transitionId){service.transitionCallbacks.has(transitionId)&&(callbacks=callbacks.concat(service.transitionCallbacks.get(transitionId)))}var service=this,nextViewScrollTop=nextView.element.scrollTop;nextView.element.scrollTop=0;var bodyScrollTop=document.body.scrollTop;this.activateView(nextView),this.fixateView(prevView),prevView.element.scrollTop=bodyScrollTop,document.body.scrollTop=nextViewScrollTop;var callbacks=new Array;collectTransitionCallbacks(prevView.id+"-"+nextView.id),collectTransitionCallbacks("*-"+nextView.id),collectTransitionCallbacks(prevView.id+"-*");var callbackArguments=[prevView,nextView],promises=new Array;callbacks.forEach(function(callback){promises.push(callback.apply(service,callbackArguments))});var promise=new Promise(function(resolve,reject){promises.length?Promise.all(promises).then(function(){resolve()}):resolve()});return promise},OffCanvasService.prototype.fixateView=function(view){var style=view.element.style;style.height=window.innerHeight+"px",style.left="0",style.minHeight=window.innerHeight+"px",style.minWidth=Math.min(window.innerWidth,document.body.offsetWidth)+"px",style.overflow="hidden",style.position="fixed",style.top="0",style.width=Math.min(window.innerWidth,document.body.offsetWidth)+"px"},OffCanvasService}(AbstractOffCanvasService);exports.OffCanvasService=OffCanvasService}(this.OffCanvas=this.OffCanvas||{});